
@{
    ViewData["Title"] = "CarHireBrowse";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>CarHireBrowse</h1>

<div class="d-flex justify-content-between">
    <div>
        <label>Car Type</label>
        <select class="form-control" asp-items="Html.GetEnumSelectList<CarCategory>()" onchange="updateList()" id="selectCarCategory">
            <option value="-1">Any Type</option>
        </select>
    </div>

    <div>
        <label>Minimum Seats</label>
        <select class="form-control" onchange="updateList()" id="selectNumSeats">
            <option value="-1">Any Seats</option>
            <option value="2">2</option>
            <option value="4">4</option>
            <option value="5">5</option>
            <option value="6">6</option>
        </select>
    </div>

    <div>
        <label>Pick-Up Time</label>
        <input type="text" class="form-control" />
        <span class="input-group-addon">
            <span class="glyphicon glyphicon-calendar"></span>
        </span>
    </div>

    <div>
        <label>Drop-Off Time</label>
        <select class="form-control" onchange="updateList()" id="selectNumSeats">
            <option value="-1">Any Seats</option>
            <option value="2">2</option>
            <option value="4">4</option>
            <option value="5">5</option>
            <option value="6">6</option>
        </select>
    </div>
</div>

<table class="table">
    <thead>
        <tr>
            <th>Image</th>
            <th>Description</th>
            <th>Car Type</th>
            <th>Seats</th>
            <th>Location</th>
        </tr>
    </thead>
    <tbody id="tbodyCars">
    </tbody>
</table>

<script>
    updateList();

    function updateList() {
        const tableCarsOld = document.getElementById('tbodyCars');
        var url = "/api/ApiCarHire?Category=" + document.getElementById("selectCarCategory").value +
            "&NumSeats=" + document.getElementById("selectNumSeats").value;

        // clearing previous values
        let tableCarsNew = tableCarsOld.cloneNode(false);
        tableCarsOld.parentNode.replaceChild(tableCarsNew, tableCarsOld);

        let tableCars = tableCarsNew;

        fetch(url)
            .then((resp) => resp.json())
            .then(function (data) {

                // getting data from response
                let cars = data;

                return cars.map(function (car) {
                    // creating elements
                    let tdImage = document.createElement("td"),
                        tdDescription = document.createElement("td"),
                        tdCarCategory = document.createElement("td"),
                        tdSeats = document.createElement("td"),
                        tdLocation = document.createElement("td");

                    // filling elements
                    tdImage.innerText = car.id;
                    tdDescription.innerText = car.description;
                    tdCarCategory.innerText = car.category;
                    tdSeats.innerText = car.numSeats;
                    tdLocation.innerText = car.latitude + ", " + car.longitude;

                    // appending
                    let rowCar = document.createElement("tr");
                    tableCars.appendChild(rowCar);
                    rowCar.appendChild(tdImage);
                    rowCar.appendChild(tdDescription);
                    rowCar.appendChild(tdCarCategory);
                    rowCar.appendChild(tdSeats);
                    rowCar.appendChild(tdLocation);
                })
            })
            .catch(function (error) {
                console.log(error);
            });
    }

</script>
